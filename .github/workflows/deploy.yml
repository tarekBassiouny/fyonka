name: Build, Test and Deploy

on:
  push:
    branches:
      - "**" # Match any branch
  pull_request:
    branches:
      - main # PRs targeting main

jobs:
  build:
    name: Build Backend & Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Install and Build Frontend
        run: |
          npm ci
          npm run build

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Copy .env
        run: cp .env.example .env

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, pdo, pdo_mysql

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Generate key
        run: php artisan key:generate

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_DATABASE: testing
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan test

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v3

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << EOF
            cd ${{ vars.DEPLOY_PATH }}
            export APP_KEY=${{ secrets.APP_KEY }}
            export APP_URL=${{ vars.APP_URL }}
            export DB_DATABASE=${{ vars.DB_DATABASE }}
            export DB_USERNAME=${{ vars.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DEFAULT_ADMIN_PASSWORD=${{ secrets.DEFAULT_ADMIN_PASSWORD }}
            export DEFAULT_API_PASSWORD=${{ secrets.DEFAULT_API_PASSWORD }}
            bash ./setup-env.sh
            chmod +x deploy.sh
            bash ./deploy.sh
          EOF
